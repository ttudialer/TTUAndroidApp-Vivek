// Generated by data binding compiler. Do not edit!
package com.kabaladigital.tingtingu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.kabaladigital.tingtingu.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class OperatorDetailFragmentBinding extends ViewDataBinding {
  @NonNull
  public final TextView btnChangeOperator;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final ImageView imgOperator;

  @NonNull
  public final RadioGroup radioGroupPrepaidPostpaid;

  @NonNull
  public final RadioButton radiobuttonPostpaid;

  @NonNull
  public final RadioButton radiobuttonPrepaid;

  @NonNull
  public final TextView tvChangeOperatorTitle;

  @NonNull
  public final TextView tvOperatorMobile;

  @NonNull
  public final TextView tvTextOperatorName;

  protected OperatorDetailFragmentBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView btnChangeOperator, Button btnNext, ImageView imgOperator,
      RadioGroup radioGroupPrepaidPostpaid, RadioButton radiobuttonPostpaid,
      RadioButton radiobuttonPrepaid, TextView tvChangeOperatorTitle, TextView tvOperatorMobile,
      TextView tvTextOperatorName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnChangeOperator = btnChangeOperator;
    this.btnNext = btnNext;
    this.imgOperator = imgOperator;
    this.radioGroupPrepaidPostpaid = radioGroupPrepaidPostpaid;
    this.radiobuttonPostpaid = radiobuttonPostpaid;
    this.radiobuttonPrepaid = radiobuttonPrepaid;
    this.tvChangeOperatorTitle = tvChangeOperatorTitle;
    this.tvOperatorMobile = tvOperatorMobile;
    this.tvTextOperatorName = tvTextOperatorName;
  }

  @NonNull
  public static OperatorDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.operator_detail_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static OperatorDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<OperatorDetailFragmentBinding>inflateInternal(inflater, R.layout.operator_detail_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static OperatorDetailFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.operator_detail_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static OperatorDetailFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<OperatorDetailFragmentBinding>inflateInternal(inflater, R.layout.operator_detail_fragment, null, false, component);
  }

  public static OperatorDetailFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static OperatorDetailFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (OperatorDetailFragmentBinding)bind(component, view, R.layout.operator_detail_fragment);
  }
}
